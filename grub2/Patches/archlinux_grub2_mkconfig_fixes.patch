diff --git a/util/grub-mkconfig.in b/util/grub-mkconfig.in
index c408ccc..95424e9 100644
--- a/util/grub-mkconfig.in
+++ b/util/grub-mkconfig.in
@@ -36,7 +36,7 @@ grub_mkconfig_dir=${sysconfdir}/grub.d
 
 self=`basename $0`
 
-grub_probe=${sbindir}/`echo grub-probe | sed "${transform}"`
+grub_probe="${sbindir}/`echo grub-probe | sed "${transform}"`"
 grub_script_check="${bindir}/`echo grub-script-check | sed "${transform}"`"
 
 GRUB_PREFIX=`echo '/@bootdirname@/@grubdirname@' | sed "s,//*,/,g"`
@@ -241,6 +241,8 @@ export GRUB_DEFAULT \
   GRUB_THEME \
   GRUB_GFXPAYLOAD_LINUX \
   GRUB_DISABLE_OS_PROBER \
+  GRUB_COLOR_NORMAL \
+  GRUB_COLOR_HIGHLIGHT \
   GRUB_INIT_TUNE \
   GRUB_SAVEDEFAULT \
   GRUB_ENABLE_CRYPTODISK \
diff --git a/util/grub.d/00_header.in b/util/grub.d/00_header.in
index 54012f8..d7e982b 100644
--- a/util/grub.d/00_header.in
+++ b/util/grub.d/00_header.in
@@ -100,6 +100,14 @@ cat <<EOF
 
 EOF
 
+if [ x$GRUB_COLOR_NORMAL != x ] && [ x$GRUB_COLOR_HIGHLIGHT != x ] ; then
+    cat << EOF
+set menu_color_normal=$GRUB_COLOR_NORMAL
+set menu_color_highlight=$GRUB_COLOR_HIGHLIGHT
+
+EOF
+fi
+
 serial=0;
 gfxterm=0;
 for x in ${GRUB_TERMINAL_INPUT} ${GRUB_TERMINAL_OUTPUT}; do
diff --git a/util/grub.d/10_linux.in b/util/grub.d/10_linux.in
index fe4f0e7..46bd092 100644
--- a/util/grub.d/10_linux.in
+++ b/util/grub.d/10_linux.in
@@ -32,8 +32,8 @@ CLASS="--class gnu-linux --class gnu --class os"
 if [ "x${GRUB_DISTRIBUTOR}" = "x" ] ; then
   OS=GNU/Linux
 else
-  OS="${GRUB_DISTRIBUTOR} GNU/Linux"
-  CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1) ${CLASS}"
+  OS="${GRUB_DISTRIBUTOR}"
+  CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | tr -d ' ') ${CLASS}"
 fi
 
 # loop-AES arranges things so that /dev/loop/X can be our root device, but
@@ -49,7 +49,7 @@ if [ "x${GRUB_DEVICE_UUID}" = "x" ] || [ "x${GRUB_DISABLE_LINUX_UUID}" = "xtrue"
     || uses_abstraction "${GRUB_DEVICE}" lvm; then
   LINUX_ROOT_DEVICE=${GRUB_DEVICE}
 else
-  LINUX_ROOT_DEVICE=UUID=${GRUB_DEVICE_UUID}
+  LINUX_ROOT_DEVICE="/dev/disk/by-uuid/${GRUB_DEVICE_UUID}"
 fi
 
 if [ "x`${grub_probe} --device ${GRUB_DEVICE} --target=fs 2>/dev/null || true`" = xbtrfs ]; then
@@ -66,7 +66,9 @@ linux_entry ()
   version="$2"
   recovery="$3"
   args="$4"
-  if ${recovery} ; then
+  if [ -n "$5" ] ; then
+    title="$(gettext_quoted "%s, with Linux %s") $5"
+  elif ${recovery} ; then
     title="$(gettext_quoted "%s, with Linux %s (recovery mode)")"
   else
     title="$(gettext_quoted "%s, with Linux %s")"
@@ -114,7 +116,9 @@ EOF
     fi
     printf '%s\n' "${prepare_boot_cache}"
   fi
+
   message="$(gettext_printf "Loading Linux %s ..." ${version})"
+
   cat << EOF
 	echo	'$message'
 	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
@@ -133,11 +137,11 @@ EOF
 
 case x`uname -m` in
     xi?86 | xx86_64)
-	list=`for i in /boot/vmlinuz-* /vmlinuz-* /boot/kernel-* ; do
+	list=`for i in /boot/vmlinuz-* /vmlinuz-* /boot/kernel-* /boot/vmlinuz26-* ; do
                   if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
               done` ;;
     *) 
-	list=`for i in /boot/vmlinuz-* /boot/vmlinux-* /vmlinuz-* /vmlinux-* /boot/kernel-* ; do
+	list=`for i in /boot/vmlinuz* /boot/vmlinux* /vmlinuz* /vmlinux* /boot/kernel-* ; do
                   if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
 	     done` ;;
 esac
@@ -152,16 +156,19 @@ while [ "x$list" != "x" ] ; do
   dirname=`dirname $linux`
   rel_dirname=`make_system_path_relative_to_its_root $dirname`
   version=`echo $basename | sed -e "s,^[^0-9]*-,,g"`
-  alt_version=`echo $version | sed -e "s,\.old$,,g"`
+  base_init=`echo $basename | sed -e "s,vmlinuz,initramfs,g"`
+  alt_version="${base_init}-fallback"
   linux_root_device_thisversion="${LINUX_ROOT_DEVICE}"
 
   initrd=
+
   for i in "initrd.img-${version}" "initrd-${version}.img" "initrd-${version}.gz" \
 	   "initrd-${version}" "initramfs-${version}.img" \
 	   "initrd.img-${alt_version}" "initrd-${alt_version}.img" \
 	   "initrd-${alt_version}" "initramfs-${alt_version}.img" \
 	   "initramfs-genkernel-${version}" \
-	   "initramfs-genkernel-${alt_version}"; do
+	   "initramfs-genkernel-${alt_version}" \
+	   "${basename/vmlinuz/initramfs}.img" "${basename/vmlinuz/kernel}.img"; do
     if test -e "${dirname}/${i}" ; then
       initrd="$i"
       break
@@ -191,6 +198,16 @@ while [ "x$list" != "x" ] ; do
 
   linux_entry "${OS}" "${version}" false \
       "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}"
+  for i in "initramfs-${version}-fallback.img" \
+	   "${basename/vmlinuz/initramfs}-fallback.img" "${basename/vmlinuz/kernel}-fallback.img"; do
+    if test -e "${dirname}/${i}"; then
+      initrd="$i"
+      linux_entry "${OS}" "${version}" true \
+	  "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}" Fallback
+      break
+    fi
+  done
+
   if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ]; then
     linux_entry "${OS}" "${version}" true \
 	"single ${GRUB_CMDLINE_LINUX}"
